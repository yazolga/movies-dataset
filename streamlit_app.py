import altair as alt # —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–µ–∫–ª–∞—Ä–∞—Ç–∏–≤–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
import pandas as pd # —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
import streamlit as st # —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π

# –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
st.set_page_config(page_title="–î–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å–º–æ–≤", page_icon="üé¨")
st.title("üé¨ –î–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å–º–æ–≤")
st.write(
    """
    –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ [–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤ (TMDB)](https://www.kaggle.com/datasets/tmdb/tmdb-movie-metadata).
    –û–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫–æ–π –∂–∞–Ω—Ä —Ñ–∏–ª—å–º–æ–≤ –ø–æ–∫–∞–∑–∞–ª –ª—É—á—à–∏–µ –∫–∞—Å—Å–æ–≤—ã–µ —Å–±–æ—Ä—ã –∑–∞ —ç—Ç–∏ –≥–æ–¥—ã. –ü—Ä–æ—Å—Ç–æ
    –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –≤–∏–¥–∂–µ—Ç—ã –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∏–∑—É—á–∏—Ç—å!
    """
)


# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã–µ—Ö –∏–∑ CSV. –ú—ã –∏—Ö –∫—ç—à–∏—Ä—É–µ–º, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–π —Ä–∞–∑ 
# –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å –≤–∏–¥–∂–µ—Ç–∞–º–∏).
@st.cache_data
def load_data():
    df = pd.read_csv("data/movies_genres_summary.csv") # —Ñ–∞–π–ª —Å —Ç–∞–±–ª–∏—Ü–µ–π, –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–µ–µ –¥–µ–ª–∞–µ—Ç—Å—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
    return df


df = load_data()

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ —Å –∂–∞–Ω—Ä–∞–º–∏ —Å –ø–æ–º–æ—â—å—é `st.multiselect`.
genres = st.multiselect(
    "–ñ–∞–Ω—Ä—ã",
    df.genre.unique(),
    ["–ë–æ–µ–≤–∏–∫", "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ", "–ö–æ–º–µ–¥–∏—è", "–î—Ä–∞–º–∞", "–£–∂–∞—Å—Ç–∏–∫"],
)

# –ü–æ–∫–∞–∑ –≤–∏–¥–∂–µ—Ç–∞-—Å–ª–∞–π–¥–µ—Ä–∞ —Å –≥–æ–¥–∞–º–∏ —Å –ø–æ–º–æ—â—å—é `st.slider`.
years = st.slider("–ì–æ–¥—ã", 2010, 2012, (2014, 2016))

# –§–∏–ª—å—Ç—Ä—É–µ–º —Ñ—Ä–µ–π–º –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–∂–µ—Ç–∞ –∏ –∏–∑–º–µ–Ω—è–µ–º –µ–≥–æ —Ñ–æ—Ä–º—É.
df_filtered = df[(df["genre"].isin(genres)) & (df["year"].between(years[0], years[1]))]
df_reshaped = df_filtered.pivot_table(
    index="year", columns="genre", values="gross", aggfunc="sum", fill_value=0
)
df_reshaped = df_reshaped.sort_values(by="year", ascending=False)


# –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã, –∏—Å–ø–æ–ª—å–∑—É—è `st.dataframe`.
st.dataframe(
    df_reshaped,
    use_container_width=True,
    column_config={"year": st.column_config.TextColumn("–ì–æ–¥")},
)

# –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –≤–∏–¥–µ –ª–∏–Ω–µ–π–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ –∏–∑ Altair, –∏—Å–ø–æ–ª—å–∑—É—è `st.altair_chart`.
df_chart = pd.melt(
    df_reshaped.reset_index(), id_vars="year", var_name="genre", value_name="gross"
)
chart = (
    alt.Chart(df_chart)
    .mark_line()
    .encode(
        x=alt.X("year:N", title="–ì–æ–¥"),
        y=alt.Y("gross:Q", title="–î–æ—Ö–æ–¥ ($)"),
        color="genre:N",
    )
    .properties(height=320)
)
st.altair_chart(chart, use_container_width=True)
